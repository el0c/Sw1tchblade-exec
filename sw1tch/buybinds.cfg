// CREDIT TO BUDI (https://gist.github.com/nickbudi/3916475#file-buybinds-cfg-L1)
// Original Creator of this Script.

//Modified/written by el0c
//File: Buybinds
//Version: 1.3
//Last Update: 27/03/2018

// Buy Binds
// *Hold* down Backspace to activate weapon buy binds on:
// [1] [2] [3] [4] [5] [6] [7] [8] [9] [0] [-] [=]  <- *[BCKSPC]*
// As of version 12, a guide will now be displayed upon pressing
// the buybinds key so you can be aware of what you're buying.

// As of version 13, you can now press F12 while holding the bind key to activate 

// #### Initialize Dependencies ####
exec sw1tch\buyswitcher.cfg
exec sw1tch\defaultbuy.cfg

bind "backspace" "+bs"
bind 1 "1a"
bind 2 "2a"
bind 3 "3a"
bind 4 "4a"
bind 5 "5a"
bind 6 "6a"
bind 7 "7a"
bind 8 "8a"
bind 9 "9a"
bind 0 "0a"
bind - "minusa"
bind = "equalsa"
bind \ "backslasha"

alias 1a "slot1"
alias 1b "action1"
alias +1 "alias 1a 1b"
alias -1 "alias 1a slot1"

alias 2a "slot2"
alias 2b "action2"
alias +2 "alias 2a 2b"
alias -2 "alias 2a slot2"

alias 3a "slot3"
alias 3b "action3"
alias +3 "alias 3a 3b"
alias -3 "alias 3a slot3"

alias 4a "slot4; slot9"
alias 4b "action4"
alias +4 "alias 4a 4b"
alias -4 "alias 4a preferdecoy"

// -------------------------------------------------------------------------------------------------------
// Fix because -4 doesn't work with "slot4; slot9"
// Causes the bind to revert to the old behavior after
// pressing the buybinds key.
// "alias 4a "slot4; slot9"" doesn't fix the issue, so this is the simplest solution.
// -------------------------------------------------------------------------------------------------------
alias preferdecoy "slot4; slot9"

alias 5a "slot5"
alias 5b "action5"
alias +5 "alias 5a 5b"
alias -5 "alias 5a slot5"

alias 6a "slot6"
alias 6b "action6"
alias +6 "alias 6a 6b"
alias -6 "alias 6a slot6"

alias 7a "slot7"
alias 7b "action7"
alias +7 "alias 7a 7b"
alias -7 "alias 7a slot7"

alias 8a "slot8"
alias 8b "action8"
alias +8 "alias 8a 8b"
alias -8 "alias 8a slot8"

alias 9a "slot9"
alias 9b "action9"
alias +9 "alias 9a 9b"
alias -9 "alias 9a slot9"

alias 0a "slot10"
alias 0b "action0"
alias +0 "alias 0a 0b"
alias -0 "alias 0a slot10"

alias minusa "slot11"
alias minusb "action-"
alias +minus "alias minusa minusb"
alias -minus "alias minusa slot11"

alias equalsa ""
alias equalsb "action="
alias +equals "alias equalsa equalsb"
alias -equals "alias equalsa """

// -------------------------------------------------------------------------------------------------------
// Explanation on why the one below doesn't follow convention:
// -------------------------------------------------------------------------------------------------------
// This one is slightly different to create the "hold" action
// much like the way you enable BuyBinds and Taunts. Normally,
// it would operate like the page switcher in taunts;
// which is key press & release. This however, makes it work on press
// and revert on release. I.e. you have to hold the buy binds and the drop key
// to enable drop mode so you don't buy all your gear in drop mode on accident. 
// ------------------------------------------------------------------------------------------------------- 
// Explanation on what this is doing differently:
// So, bear with me. I'll try my best to explain.
// -------------------------------------------------------------------------------------------------------
// Normally a key is bound to the "a" alias, this doesn't change. (i.e. 1 = "1a")
// When you press the toggle key (backspace); alias "a" is then set to the same value as alias "b." 
// (i.e. alias 1a 1b)
// This allows for changing what the key does without rebinding it on the fly. 
// Upon release, the "a" alias is returned to it's previous state. (i.e. alias a "commands") 
// -------------------------------------------------------------------------------------------------------
// This becomes a problem when you try to use multistate aliases. (i.e. +example & -example)
// It seems to me that nesting the positive alias within another alias that is then activated by the key
// will allow the content of the "+" alias to run when the desired key is pressed, but not to run the "-" 
// upon release like normal. 
// Knife quick switch is a good example of this behavior working as intended. Hold f to hold knife, 
// release to pull out last gun.
// This gets around this issue by performing the bind actions on the fly instead of using an alias that 
// gets set to different values; which allows the "+" to play the "-" on release of the key. 
// Q: "But why aren't the others done this way?"
// A: Well, they probably could be; however I seem to recall issues with constantly setting a "bind" back 
//    and forth when trying to make a "scroll wheel jump/shoot" toggle for quick firing. It wouldn't ever
//    switch back to jump without "host_writeconfig" which seemed overkill for such a simple script. 
//	  If this isn't the case anymore; aliases seem to be very efficient regardless and I don't really want
//	  to spent the time rewriting scripts that work for no reason. If someone proves it's more efficent, 
//	  I'll consider updating this method. 
// -------------------------------------------------------------------------------------------------------

alias +dropbind "bind F12 +dropcommands"
alias -dropbind "unbind F12"
alias +dropcommands "+CycleBuy; -CycleBuy"
alias -dropcommands "+CycleBuy; -CycleBuy"

alias +bs "+1; +2; +3; +4; +5; +6; +7; +8; +9; +0; +minus; +equals; +dropbind; buytracker; exec sw1tch\notify.cfg"
alias -bs "-1; -2; -3; -4; -5; -6; -7; -8; -9; -8; -minus; -equals; -dropbind; clear"